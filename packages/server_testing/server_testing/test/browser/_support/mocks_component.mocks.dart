// Mocks generated by Mockito 5.4.6 from annotations
// in server_testing/test/_support/mocks_component.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:server_testing/src/browser/browser_config.dart' as _i3;
import 'package:server_testing/src/browser/interfaces/browser.dart' as _i17;
import 'package:server_testing/src/browser/interfaces/cookie.dart' as _i10;
import 'package:server_testing/src/browser/interfaces/dialog.dart' as _i6;
import 'package:server_testing/src/browser/interfaces/download.dart' as _i13;
import 'package:server_testing/src/browser/interfaces/emulation.dart' as _i14;
import 'package:server_testing/src/browser/interfaces/frame.dart' as _i7;
import 'package:server_testing/src/browser/interfaces/keyboard.dart' as _i4;
import 'package:server_testing/src/browser/interfaces/local_storage.dart'
    as _i11;
import 'package:server_testing/src/browser/interfaces/mouse.dart' as _i5;
import 'package:server_testing/src/browser/interfaces/network.dart' as _i15;
import 'package:server_testing/src/browser/interfaces/session_storage.dart'
    as _i12;
import 'package:server_testing/src/browser/interfaces/waiter.dart' as _i8;
import 'package:server_testing/src/browser/interfaces/window.dart' as _i9;
import 'package:server_testing/src/browser/sync/browser.dart' as _i16;
import 'package:webdriver/sync_core.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeWebDriver_0 extends _i1.SmartFake implements _i2.WebDriver {
  _FakeWebDriver_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBrowserConfig_1 extends _i1.SmartFake implements _i3.BrowserConfig {
  _FakeBrowserConfig_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeKeyboard_2 extends _i1.SmartFake implements _i4.Keyboard {
  _FakeKeyboard_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMouse_3 extends _i1.SmartFake implements _i5.Mouse {
  _FakeMouse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDialogHandler_4 extends _i1.SmartFake implements _i6.DialogHandler {
  _FakeDialogHandler_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFrameHandler_5 extends _i1.SmartFake implements _i7.FrameHandler {
  _FakeFrameHandler_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBrowserWaiter_6 extends _i1.SmartFake implements _i8.BrowserWaiter {
  _FakeBrowserWaiter_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowManager_7 extends _i1.SmartFake implements _i9.WindowManager {
  _FakeWindowManager_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCookie_8 extends _i1.SmartFake implements _i10.Cookie {
  _FakeCookie_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocalStorage_9 extends _i1.SmartFake implements _i11.LocalStorage {
  _FakeLocalStorage_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionStorage_10 extends _i1.SmartFake
    implements _i12.SessionStorage {
  _FakeSessionStorage_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDownload_11 extends _i1.SmartFake implements _i13.Download {
  _FakeDownload_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEmulation_12 extends _i1.SmartFake implements _i14.Emulation {
  _FakeEmulation_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeNetwork_13 extends _i1.SmartFake implements _i15.Network {
  _FakeNetwork_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSyncBrowser_14 extends _i1.SmartFake implements _i16.SyncBrowser {
  _FakeSyncBrowser_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebElement_15 extends _i1.SmartFake implements _i2.WebElement {
  _FakeWebElement_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBrowser_16 extends _i1.SmartFake implements _i17.Browser {
  _FakeBrowser_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SyncBrowser].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncBrowser extends _i1.Mock implements _i16.SyncBrowser {
  MockSyncBrowser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WebDriver get driver =>
      (super.noSuchMethod(
            Invocation.getter(#driver),
            returnValue: _FakeWebDriver_0(this, Invocation.getter(#driver)),
          )
          as _i2.WebDriver);

  @override
  _i3.BrowserConfig get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: _FakeBrowserConfig_1(this, Invocation.getter(#config)),
          )
          as _i3.BrowserConfig);

  @override
  _i4.Keyboard get keyboard =>
      (super.noSuchMethod(
            Invocation.getter(#keyboard),
            returnValue: _FakeKeyboard_2(this, Invocation.getter(#keyboard)),
          )
          as _i4.Keyboard);

  @override
  _i5.Mouse get mouse =>
      (super.noSuchMethod(
            Invocation.getter(#mouse),
            returnValue: _FakeMouse_3(this, Invocation.getter(#mouse)),
          )
          as _i5.Mouse);

  @override
  _i6.DialogHandler get dialogs =>
      (super.noSuchMethod(
            Invocation.getter(#dialogs),
            returnValue: _FakeDialogHandler_4(
              this,
              Invocation.getter(#dialogs),
            ),
          )
          as _i6.DialogHandler);

  @override
  _i7.FrameHandler get frames =>
      (super.noSuchMethod(
            Invocation.getter(#frames),
            returnValue: _FakeFrameHandler_5(this, Invocation.getter(#frames)),
          )
          as _i7.FrameHandler);

  @override
  _i8.BrowserWaiter get waiter =>
      (super.noSuchMethod(
            Invocation.getter(#waiter),
            returnValue: _FakeBrowserWaiter_6(this, Invocation.getter(#waiter)),
          )
          as _i8.BrowserWaiter);

  @override
  _i9.WindowManager get window =>
      (super.noSuchMethod(
            Invocation.getter(#window),
            returnValue: _FakeWindowManager_7(this, Invocation.getter(#window)),
          )
          as _i9.WindowManager);

  @override
  _i10.Cookie get cookies =>
      (super.noSuchMethod(
            Invocation.getter(#cookies),
            returnValue: _FakeCookie_8(this, Invocation.getter(#cookies)),
          )
          as _i10.Cookie);

  @override
  _i11.LocalStorage get localStorage =>
      (super.noSuchMethod(
            Invocation.getter(#localStorage),
            returnValue: _FakeLocalStorage_9(
              this,
              Invocation.getter(#localStorage),
            ),
          )
          as _i11.LocalStorage);

  @override
  _i12.SessionStorage get sessionStorage =>
      (super.noSuchMethod(
            Invocation.getter(#sessionStorage),
            returnValue: _FakeSessionStorage_10(
              this,
              Invocation.getter(#sessionStorage),
            ),
          )
          as _i12.SessionStorage);

  @override
  _i13.Download get download =>
      (super.noSuchMethod(
            Invocation.getter(#download),
            returnValue: _FakeDownload_11(this, Invocation.getter(#download)),
          )
          as _i13.Download);

  @override
  _i14.Emulation get emulation =>
      (super.noSuchMethod(
            Invocation.getter(#emulation),
            returnValue: _FakeEmulation_12(this, Invocation.getter(#emulation)),
          )
          as _i14.Emulation);

  @override
  _i15.Network get network =>
      (super.noSuchMethod(
            Invocation.getter(#network),
            returnValue: _FakeNetwork_13(this, Invocation.getter(#network)),
          )
          as _i15.Network);

  @override
  _i16.SyncBrowser get browser =>
      (super.noSuchMethod(
            Invocation.getter(#browser),
            returnValue: _FakeSyncBrowser_14(this, Invocation.getter(#browser)),
          )
          as _i16.SyncBrowser);

  @override
  _i18.FutureOr<void> waitUntil(
    _i18.FutureOr<bool> Function()? predicate, {
    Duration? timeout,
    Duration? interval = const Duration(milliseconds: 100),
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #waitUntil,
              [predicate],
              {#timeout: timeout, #interval: interval},
            ),
          )
          as _i18.FutureOr<void>);

  @override
  void visit(String? url) => super.noSuchMethod(
    Invocation.method(#visit, [url]),
    returnValueForMissingStub: null,
  );

  @override
  void back() => super.noSuchMethod(
    Invocation.method(#back, []),
    returnValueForMissingStub: null,
  );

  @override
  void forward() => super.noSuchMethod(
    Invocation.method(#forward, []),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void click(String? selector) => super.noSuchMethod(
    Invocation.method(#click, [selector]),
    returnValueForMissingStub: null,
  );

  @override
  void type(String? selector, String? value) => super.noSuchMethod(
    Invocation.method(#type, [selector, value]),
    returnValueForMissingStub: null,
  );

  @override
  _i2.WebElement findElement(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#findElement, [selector]),
            returnValue: _FakeWebElement_15(
              this,
              Invocation.method(#findElement, [selector]),
            ),
          )
          as _i2.WebElement);

  @override
  bool isPresent(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#isPresent, [selector]),
            returnValue: false,
          )
          as bool);

  @override
  String getPageSource() =>
      (super.noSuchMethod(
            Invocation.method(#getPageSource, []),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getPageSource, []),
            ),
          )
          as String);

  @override
  String getCurrentUrl() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUrl, []),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getCurrentUrl, []),
            ),
          )
          as String);

  @override
  String getTitle() =>
      (super.noSuchMethod(
            Invocation.method(#getTitle, []),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getTitle, []),
            ),
          )
          as String);

  @override
  dynamic executeScript(String? script) =>
      super.noSuchMethod(Invocation.method(#executeScript, [script]));

  @override
  void quit() => super.noSuchMethod(
    Invocation.method(#quit, []),
    returnValueForMissingStub: null,
  );

  @override
  void clickLink(String? linkText) => super.noSuchMethod(
    Invocation.method(#clickLink, [linkText]),
    returnValueForMissingStub: null,
  );

  @override
  void selectOption(String? selector, String? value) => super.noSuchMethod(
    Invocation.method(#selectOption, [selector, value]),
    returnValueForMissingStub: null,
  );

  @override
  void check(String? selector) => super.noSuchMethod(
    Invocation.method(#check, [selector]),
    returnValueForMissingStub: null,
  );

  @override
  void uncheck(String? selector) => super.noSuchMethod(
    Invocation.method(#uncheck, [selector]),
    returnValueForMissingStub: null,
  );

  @override
  void fillForm(Map<String, String>? data) => super.noSuchMethod(
    Invocation.method(#fillForm, [data]),
    returnValueForMissingStub: null,
  );

  @override
  void submitForm([String? selector]) => super.noSuchMethod(
    Invocation.method(#submitForm, [selector]),
    returnValueForMissingStub: null,
  );

  @override
  void uploadFile(String? selector, String? filePath) => super.noSuchMethod(
    Invocation.method(#uploadFile, [selector, filePath]),
    returnValueForMissingStub: null,
  );

  @override
  void scrollTo(String? selector) => super.noSuchMethod(
    Invocation.method(#scrollTo, [selector]),
    returnValueForMissingStub: null,
  );

  @override
  void scrollToTop() => super.noSuchMethod(
    Invocation.method(#scrollToTop, []),
    returnValueForMissingStub: null,
  );

  @override
  void scrollToBottom() => super.noSuchMethod(
    Invocation.method(#scrollToBottom, []),
    returnValueForMissingStub: null,
  );

  @override
  void waitForElement(String? selector, {Duration? timeout}) =>
      super.noSuchMethod(
        Invocation.method(#waitForElement, [selector], {#timeout: timeout}),
        returnValueForMissingStub: null,
      );

  @override
  void waitForText(String? text, {Duration? timeout}) => super.noSuchMethod(
    Invocation.method(#waitForText, [text], {#timeout: timeout}),
    returnValueForMissingStub: null,
  );

  @override
  void waitForUrl(String? url, {Duration? timeout}) => super.noSuchMethod(
    Invocation.method(#waitForUrl, [url], {#timeout: timeout}),
    returnValueForMissingStub: null,
  );

  @override
  void pause(Duration? duration) => super.noSuchMethod(
    Invocation.method(#pause, [duration]),
    returnValueForMissingStub: null,
  );

  @override
  void takeScreenshot([String? name]) => super.noSuchMethod(
    Invocation.method(#takeScreenshot, [name]),
    returnValueForMissingStub: null,
  );

  @override
  void dumpPageSource() => super.noSuchMethod(
    Invocation.method(#dumpPageSource, []),
    returnValueForMissingStub: null,
  );

  @override
  String getElementText(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#getElementText, [selector]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getElementText, [selector]),
            ),
          )
          as String);

  @override
  String? getElementAttribute(String? selector, String? attribute) =>
      (super.noSuchMethod(
            Invocation.method(#getElementAttribute, [selector, attribute]),
          )
          as String?);

  @override
  _i17.Browser assertTitle(String? title) =>
      (super.noSuchMethod(
            Invocation.method(#assertTitle, [title]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertTitle, [title]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertTitleContains(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#assertTitleContains, [text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertTitleContains, [text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertUrlIs(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#assertUrlIs, [url]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertUrlIs, [url]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertPathIs(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#assertPathIs, [path]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertPathIs, [path]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertPathBeginsWith(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#assertPathBeginsWith, [path]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertPathBeginsWith, [path]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertPathEndsWith(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#assertPathEndsWith, [path]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertPathEndsWith, [path]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertQueryStringHas(String? name, [String? value]) =>
      (super.noSuchMethod(
            Invocation.method(#assertQueryStringHas, [name, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertQueryStringHas, [name, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertQueryStringMissing(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#assertQueryStringMissing, [name]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertQueryStringMissing, [name]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertSee(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#assertSee, [text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertSee, [text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertDontSee(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#assertDontSee, [text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertDontSee, [text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertSeeIn(String? selector, String? text) =>
      (super.noSuchMethod(
            Invocation.method(#assertSeeIn, [selector, text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertSeeIn, [selector, text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertDontSeeIn(String? selector, String? text) =>
      (super.noSuchMethod(
            Invocation.method(#assertDontSeeIn, [selector, text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertDontSeeIn, [selector, text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertSeeAnythingIn(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertSeeAnythingIn, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertSeeAnythingIn, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertSeeNothingIn(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertSeeNothingIn, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertSeeNothingIn, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertPresent(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertPresent, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertPresent, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertNotPresent(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertNotPresent, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertNotPresent, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertVisible(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertVisible, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertVisible, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertMissing(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#assertMissing, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertMissing, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertInputPresent(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#assertInputPresent, [name]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertInputPresent, [name]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertInputMissing(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#assertInputMissing, [name]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertInputMissing, [name]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertInputValue(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertInputValue, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertInputValue, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertInputValueIsNot(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertInputValueIsNot, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertInputValueIsNot, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertChecked(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertChecked, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertChecked, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertNotChecked(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertNotChecked, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertNotChecked, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertRadioSelected(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertRadioSelected, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertRadioSelected, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertRadioNotSelected(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertRadioNotSelected, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertRadioNotSelected, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertSelected(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertSelected, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertSelected, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertNotSelected(String? field, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#assertNotSelected, [field, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertNotSelected, [field, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertEnabled(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertEnabled, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertEnabled, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertDisabled(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertDisabled, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertDisabled, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertFocused(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertFocused, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertFocused, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertNotFocused(String? field) =>
      (super.noSuchMethod(
            Invocation.method(#assertNotFocused, [field]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertNotFocused, [field]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertAuthenticated([String? guard]) =>
      (super.noSuchMethod(
            Invocation.method(#assertAuthenticated, [guard]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertAuthenticated, [guard]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser assertGuest([String? guard]) =>
      (super.noSuchMethod(
            Invocation.method(#assertGuest, [guard]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#assertGuest, [guard]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldSee(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#shouldSee, [text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldSee, [text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldNotSee(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#shouldNotSee, [text]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldNotSee, [text]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldHaveTitle(String? title) =>
      (super.noSuchMethod(
            Invocation.method(#shouldHaveTitle, [title]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldHaveTitle, [title]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldBeOn(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#shouldBeOn, [url]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldBeOn, [url]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldHaveElement(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#shouldHaveElement, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldHaveElement, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldNotHaveElement(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#shouldNotHaveElement, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldNotHaveElement, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldHaveValue(String? selector, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#shouldHaveValue, [selector, value]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldHaveValue, [selector, value]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldBeChecked(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#shouldBeChecked, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldBeChecked, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldBeEnabled(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#shouldBeEnabled, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldBeEnabled, [selector]),
            ),
          )
          as _i17.Browser);

  @override
  _i17.Browser shouldBeDisabled(String? selector) =>
      (super.noSuchMethod(
            Invocation.method(#shouldBeDisabled, [selector]),
            returnValue: _FakeBrowser_16(
              this,
              Invocation.method(#shouldBeDisabled, [selector]),
            ),
          )
          as _i17.Browser);
}
